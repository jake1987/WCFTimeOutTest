//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace AskeyB2BService.TWTest.B2BDBService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="B2BDBService.IB2BDBService")]
    public interface IB2BDBService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IB2BDBService/ExecuteSqlTran", ReplyAction="http://tempuri.org/IB2BDBService/ExecuteSqlTranResponse")]
        bool ExecuteSqlTran(System.Collections.Generic.List<string> SQLStringList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IB2BDBService/ExecuteNonQuery", ReplyAction="http://tempuri.org/IB2BDBService/ExecuteNonQueryResponse")]
        int ExecuteNonQuery(string cmdText);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IB2BDBServiceChannel : AskeyB2BService.TWTest.B2BDBService.IB2BDBService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class B2BDBServiceClient : System.ServiceModel.ClientBase<AskeyB2BService.TWTest.B2BDBService.IB2BDBService>, AskeyB2BService.TWTest.B2BDBService.IB2BDBService {
        
        public B2BDBServiceClient() {
        }
        
        public B2BDBServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public B2BDBServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public B2BDBServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public B2BDBServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ExecuteSqlTran(System.Collections.Generic.List<string> SQLStringList) {
            return base.Channel.ExecuteSqlTran(SQLStringList);
        }
        
        public int ExecuteNonQuery(string cmdText) {
            return base.Channel.ExecuteNonQuery(cmdText);
        }
    }
}
