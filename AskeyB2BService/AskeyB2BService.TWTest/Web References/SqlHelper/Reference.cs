//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace AskeyB2BService.TWTest.SqlHelper {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExecuteSqlTranOperationCompleted;
        
        private System.Threading.SendOrPostCallback DMLRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoDTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback SqlCommandWithTransactionOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::AskeyB2BService.TWTest.Properties.Settings.Default.AskeyB2BService_TWTest_SqlHelper_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event ExecuteSqlTranCompletedEventHandler ExecuteSqlTranCompleted;
        
        /// <remarks/>
        public event DMLRecordCompletedEventHandler DMLRecordCompleted;
        
        /// <remarks/>
        public event GetInfoDTCompletedEventHandler GetInfoDTCompleted;
        
        /// <remarks/>
        public event GetStrCompletedEventHandler GetStrCompleted;
        
        /// <remarks/>
        public event GetNumCompletedEventHandler GetNumCompleted;
        
        /// <remarks/>
        public event SqlCommandWithTransactionCompletedEventHandler SqlCommandWithTransactionCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExecuteSqlTran", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExecuteSqlTran(string[] SQLStringList) {
            object[] results = this.Invoke("ExecuteSqlTran", new object[] {
                        SQLStringList});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExecuteSqlTranAsync(string[] SQLStringList) {
            this.ExecuteSqlTranAsync(SQLStringList, null);
        }
        
        /// <remarks/>
        public void ExecuteSqlTranAsync(string[] SQLStringList, object userState) {
            if ((this.ExecuteSqlTranOperationCompleted == null)) {
                this.ExecuteSqlTranOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteSqlTranOperationCompleted);
            }
            this.InvokeAsync("ExecuteSqlTran", new object[] {
                        SQLStringList}, this.ExecuteSqlTranOperationCompleted, userState);
        }
        
        private void OnExecuteSqlTranOperationCompleted(object arg) {
            if ((this.ExecuteSqlTranCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteSqlTranCompleted(this, new ExecuteSqlTranCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DMLRecord", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DMLRecord(string strSql, string strConfig) {
            object[] results = this.Invoke("DMLRecord", new object[] {
                        strSql,
                        strConfig});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DMLRecordAsync(string strSql, string strConfig) {
            this.DMLRecordAsync(strSql, strConfig, null);
        }
        
        /// <remarks/>
        public void DMLRecordAsync(string strSql, string strConfig, object userState) {
            if ((this.DMLRecordOperationCompleted == null)) {
                this.DMLRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDMLRecordOperationCompleted);
            }
            this.InvokeAsync("DMLRecord", new object[] {
                        strSql,
                        strConfig}, this.DMLRecordOperationCompleted, userState);
        }
        
        private void OnDMLRecordOperationCompleted(object arg) {
            if ((this.DMLRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DMLRecordCompleted(this, new DMLRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInfoDT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetInfoDT(string strSql, string strConfig) {
            object[] results = this.Invoke("GetInfoDT", new object[] {
                        strSql,
                        strConfig});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoDTAsync(string strSql, string strConfig) {
            this.GetInfoDTAsync(strSql, strConfig, null);
        }
        
        /// <remarks/>
        public void GetInfoDTAsync(string strSql, string strConfig, object userState) {
            if ((this.GetInfoDTOperationCompleted == null)) {
                this.GetInfoDTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoDTOperationCompleted);
            }
            this.InvokeAsync("GetInfoDT", new object[] {
                        strSql,
                        strConfig}, this.GetInfoDTOperationCompleted, userState);
        }
        
        private void OnGetInfoDTOperationCompleted(object arg) {
            if ((this.GetInfoDTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoDTCompleted(this, new GetInfoDTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStr(string strSql, string strConfig) {
            object[] results = this.Invoke("GetStr", new object[] {
                        strSql,
                        strConfig});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStrAsync(string strSql, string strConfig) {
            this.GetStrAsync(strSql, strConfig, null);
        }
        
        /// <remarks/>
        public void GetStrAsync(string strSql, string strConfig, object userState) {
            if ((this.GetStrOperationCompleted == null)) {
                this.GetStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStrOperationCompleted);
            }
            this.InvokeAsync("GetStr", new object[] {
                        strSql,
                        strConfig}, this.GetStrOperationCompleted, userState);
        }
        
        private void OnGetStrOperationCompleted(object arg) {
            if ((this.GetStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStrCompleted(this, new GetStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetNum(string strSql, string strConfig) {
            object[] results = this.Invoke("GetNum", new object[] {
                        strSql,
                        strConfig});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetNumAsync(string strSql, string strConfig) {
            this.GetNumAsync(strSql, strConfig, null);
        }
        
        /// <remarks/>
        public void GetNumAsync(string strSql, string strConfig, object userState) {
            if ((this.GetNumOperationCompleted == null)) {
                this.GetNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumOperationCompleted);
            }
            this.InvokeAsync("GetNum", new object[] {
                        strSql,
                        strConfig}, this.GetNumOperationCompleted, userState);
        }
        
        private void OnGetNumOperationCompleted(object arg) {
            if ((this.GetNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumCompleted(this, new GetNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SqlCommandWithTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SqlCommandWithTransaction(string[] AryStrSQL, string strConfig) {
            object[] results = this.Invoke("SqlCommandWithTransaction", new object[] {
                        AryStrSQL,
                        strConfig});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SqlCommandWithTransactionAsync(string[] AryStrSQL, string strConfig) {
            this.SqlCommandWithTransactionAsync(AryStrSQL, strConfig, null);
        }
        
        /// <remarks/>
        public void SqlCommandWithTransactionAsync(string[] AryStrSQL, string strConfig, object userState) {
            if ((this.SqlCommandWithTransactionOperationCompleted == null)) {
                this.SqlCommandWithTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSqlCommandWithTransactionOperationCompleted);
            }
            this.InvokeAsync("SqlCommandWithTransaction", new object[] {
                        AryStrSQL,
                        strConfig}, this.SqlCommandWithTransactionOperationCompleted, userState);
        }
        
        private void OnSqlCommandWithTransactionOperationCompleted(object arg) {
            if ((this.SqlCommandWithTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SqlCommandWithTransactionCompleted(this, new SqlCommandWithTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExecuteSqlTranCompletedEventHandler(object sender, ExecuteSqlTranCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteSqlTranCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExecuteSqlTranCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DMLRecordCompletedEventHandler(object sender, DMLRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DMLRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DMLRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInfoDTCompletedEventHandler(object sender, GetInfoDTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoDTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoDTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetStrCompletedEventHandler(object sender, GetStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNumCompletedEventHandler(object sender, GetNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SqlCommandWithTransactionCompletedEventHandler(object sender, SqlCommandWithTransactionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SqlCommandWithTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SqlCommandWithTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591